<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.pyyf.fileStore.mapper.IMyFileMapper">
  <!--开启二级缓存,使用Ehcache缓存框架-->
  <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

  <resultMap id="BaseResultMap" type="site.pyyf.fileStore.entity.MyFile">
    <id column="my_file_id" jdbcType="INTEGER" property="myFileId" />
    <result column="my_file_name" jdbcType="VARCHAR" property="myFileName" />
    <result column="show_path" jdbcType="VARCHAR" property="showPath" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="my_file_path" jdbcType="VARCHAR" property="myFilePath" />
    <result column="download_time" jdbcType="INTEGER" property="downloadTime" />
    <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="parent_folder_id" jdbcType="INTEGER" property="parentFolderId" />
  </resultMap>

  <!--表中所有属性-->
  <sql id="Base_Column_List">
    my_file_id, my_file_name, user_id, my_file_path, download_time, upload_time,
    parent_folder_id,size,type,postfix,show_path
  </sql>
  <!--添加属性sql-->
  <sql id="Base_Insert_Key_List">
    <if test="myFileName != null">
      my_file_name,
    </if>
    <if test="userId != null">
      user_id,
    </if>
    <if test="myFilePath != null">
      my_file_path,
    </if>
    <if test="downloadTime != null">
      download_time,
    </if>
    <if test="uploadTime != null">
      upload_time,
    </if>
    <if test="parentFolderId != null">
      parent_folder_id,
    </if>
    <if test="size != null">
      size,
    </if>
    <if test="type != null">
      type,
    </if>
    <if test="postfix != null">
      postfix,
    </if>
    <if test="showPath != null">
      show_path,
    </if>
  </sql>
  <!--添加值sql-->
  <sql id="Base_Insert_Value_List">
    <if test="myFileName != null">
      #{myFileName,jdbcType=VARCHAR},
    </if>
    <if test="userId != null">
      #{userId,jdbcType=INTEGER},
    </if>
    <if test="myFilePath != null">
      #{myFilePath,jdbcType=VARCHAR},
    </if>
    <if test="downloadTime != null">
      #{downloadTime,jdbcType=INTEGER},
    </if>
    <if test="uploadTime != null">
      #{uploadTime,jdbcType=TIMESTAMP},
    </if>
    <if test="parentFolderId != null">
      #{parentFolderId,jdbcType=INTEGER},
    </if>
    <if test="size != null">
      #{size},
    </if>
    <if test="type != null">
      #{type},
    </if>
    <if test="postfix != null">
      #{postfix},
    </if>
    <if test="showPath != null">
      #{showPath,jdbcType=VARCHAR},
    </if>
  </sql>
  <!--修改sql-->
  <sql id="Base_Update_List">
    <if test="myFileName != null">
      my_file_name = #{myFileName,jdbcType=VARCHAR},
    </if>
    <if test="downloadTime != null">
      download_time = #{downloadTime,jdbcType=INTEGER},
    </if>
    <if test="uploadTime != null">
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
    </if>
    <if test="parentFolderId != null">
      parent_folder_id = #{parentFolderId,jdbcType=INTEGER},
    </if>
    <if test="size != null">
      size = #{size},
    </if>
    <if test="type != null">
      type = #{type},
    </if>
    <if test="showPath != null">
      show_path = #{showPath,jdbcType=VARCHAR},
    </if>
  </sql>

  <insert id="addFileByUserId" keyColumn="my_file_id" keyProperty="myFileId" parameterType="site.pyyf.fileStore.entity.MyFile" useGeneratedKeys="true">
    insert into my_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <include refid="Base_Insert_Key_List"></include>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <include refid="Base_Insert_Value_List"></include>
    </trim>
  </insert>

  <update id="updateFileByFileId" parameterType="site.pyyf.fileStore.entity.MyFile">
    update my_file
    <set>
        <include refid="Base_Update_List"></include>
    </set>
    where my_file_id = #{myFileId,jdbcType=INTEGER}
  </update>

  <delete id="deleteByFileId" parameterType="java.lang.Integer">
    delete from my_file
    where my_file_id = #{myFileId,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByParentFolderId" parameterType="java.lang.Integer">
    delete from my_file
    where parent_folder_id = #{id}
  </delete>

  <select id="getFileByFileId" parameterType="java.lang.Integer" resultType="site.pyyf.fileStore.entity.MyFile">
    select
    <include refid="Base_Column_List" />
    from my_file
    where my_file_id = #{myFileId,jdbcType=INTEGER}
  </select>

  <select id="getRootFilesByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from my_file
    where user_id = #{userId} and parent_folder_id = 0;
  </select>

  <select id="getFilesByUserIdAndParentFolderId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from my_file
    where parent_folder_id = #{parentFolderId} and user_id = #{userId};
  </select>

  <select id="getFilesByType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from my_file
    where user_id = #{userId} and type = #{type};
  </select>

  <select id="getCountStatistics" resultType="site.pyyf.fileStore.entity.UserStatistics">
   select sum(type = 1) doc,sum(type = 2) image,sum(type = 3) video,
      sum(type = 4) music,sum(type = 5) other,count(*) fileCount from my_file
      where user_id = #{id}
  </select>
</mapper>